---
apiVersion: v1
kind: ConfigMap
metadata:
  name: main-config-5
  namespace: default
data:
  KAFKA_ADDRESS: host.docker.internal:29092,host.docker.internal:29093,host.docker.internal:29094

  LAMBDA_IDENTIFIER_KAFKA_CONSUMER_GROUP: audi.skripsi.lambda_speed_identifier_group
  LAMBDA_IDENTIFIER_KAFKA_IN_TOPIC: audi.skripsi.lambda_event_ingestion
  LAMBDA_IDENTIFIER_KAFKA_OUT_TOPIC: audi.skripsi.lambda_speed_event_identifier
  
  LAMBDA_IDENTIFIER_BATCH_KAFKA_CONSUMER_GROUP: audi.skripsi.lambda_batch_identifier_group
  LAMBDA_IDENTIFIER_BATCH_KAFKA_IN_TOPIC: audi.skripsi.lambda_batch_processor_event_ingestion
  LAMBDA_IDENTIFIER_BATCH_KAFKA_OUT_TOPIC: audi.skripsi.lambda_batch_event_identifier
  

  LAMBDA_LEVEL_STANDARDIZER_KAFKA_CONSUMER_GROUP: audi.skripsi.lambda_speed_level_standardizer_group
  LAMBDA_LEVEL_STANDARDIZER_KAFKA_IN_TOPIC: audi.skripsi.lambda_speed_event_identifier
  LAMBDA_LEVEL_STANDARDIZER_KAFKA_OUT_TOPIC: audi.skripsi.lambda_speed_event_level_standardizer

  LAMBDA_LEVEL_STANDARDIZER_BATCH_KAFKA_CONSUMER_GROUP: audi.skripsi.lambda_batch_level_standardizer_group
  LAMBDA_LEVEL_STANDARDIZER_BATCH_KAFKA_IN_TOPIC: audi.skripsi.lambda_batch_event_identifier
  LAMBDA_LEVEL_STANDARDIZER_BATCH_KAFKA_OUT_TOPIC: audi.skripsi.lambda_batch_event_level_standardizer


  LAMBDA_BATCH_PROCESSOR_KAFKA_CONSUMER_GROUP: audi.skripsi.lambda_batch_processor_group_tes
  LAMBDA_BATCH_PROCESSOR_KAFKA_IN_TOPIC: audi.skripsi.lambda_event_ingestion
  LAMBDA_BATCH_PROCESSOR_KAFKA_OUT_TOPIC: audi.skripsi.lambda_batch_processor_event_ingestion


  LAMBDA_EVENT_PRESENTER_KAFKA_CONSUMER_GROUP: audi.skripsi.lambda_speed_event_presenter_group_tes
  LAMBDA_EVENT_PRESENTER_KAFKA_IN_TOPIC: audi.skripsi.lambda_speed_event_level_standardizer

  LAMBDA_EVENT_PRESENTER_BATCH_KAFKA_CONSUMER_GROUP: audi.skripsi.lambda_batch_event_presenter_group_tes
  LAMBDA_EVENT_PRESENTER_BATCH_KAFKA_IN_TOPIC: audi.skripsi.lambda_batch_event_level_standardizer

  LAMBDA_EVENT_PRESENTER_BATCH_SIZE: "200"
  LAMBDA_EVENT_PRESENTER_BATCH_TIME_SECOND: "10"

  MONGODB_NAME: audi_skripsi_lambda
  MONGODB_ADDRESS: root:1212@host.docker.internal:27017

  REDIS_ADDRESS: host.docker.internal:6379
  REDIS_PASSWORD: ""

  NAME_NODE_ADDRESS: host.docker.internal:9000


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-alpine-deployment
  labels:
    app: test-alpine
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-alpine
  template:
    metadata:
      labels:
        app: test-alpine
    spec:
      containers:
      - name: test-alpine-container
        image: redis:alpine3.17

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audi-skripsi-lambda-identifier-deployment
  labels:
    app: audi-skripsi-lambda-identifier
spec:
  replicas: 3
  selector:
    matchLabels:
      app: audi-skripsi-lambda-identifier
  template:
    metadata:
      labels:
        app: audi-skripsi-lambda-identifier
    spec:
      containers:
      - name: audi-skripsi-lambda-identifier-container
        image: audi-skripsi-lambda-identifier:1.0.1
        ports:
        - containerPort: 8080
        env:
        - name: KAFKA_CONSUMER_GROUP
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_IDENTIFIER_KAFKA_CONSUMER_GROUP
        - name: KAFKA_IN_TOPIC
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_IDENTIFIER_KAFKA_IN_TOPIC
        - name: KAFKA_OUT_TOPIC
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_IDENTIFIER_KAFKA_OUT_TOPIC
        - name: KAFKA_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: KAFKA_ADDRESS

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audi-skripsi-lambda-level-standardizer-deployment
  labels:
    app: audi-skripsi-lambda-level-standardizer
spec:
  replicas: 3
  selector:
    matchLabels:
      app: audi-skripsi-lambda-level-standardizer
  template:
    metadata:
      labels:
        app: audi-skripsi-lambda-level-standardizer
    spec:
      containers:
      - name: audi-skripsi-lambda-level-standardizer-container
        image: audi-skripsi-lambda-level-standardizer:1.0.1
        ports:
        - containerPort: 8080
        env:
        - name: KAFKA_CONSUMER_GROUP
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_LEVEL_STANDARDIZER_KAFKA_CONSUMER_GROUP
        - name: KAFKA_IN_TOPIC
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_LEVEL_STANDARDIZER_KAFKA_IN_TOPIC
        - name: KAFKA_OUT_TOPIC
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_LEVEL_STANDARDIZER_KAFKA_OUT_TOPIC
        - name: KAFKA_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: KAFKA_ADDRESS

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audi-skripsi-lambda-batch-identifier-deployment
  labels:
    app: audi-skripsi-lambda-batch-identifier
spec:
  replicas: 3
  selector:
    matchLabels:
      app: audi-skripsi-lambda-batch-identifier
  template:
    metadata:
      labels:
        app: audi-skripsi-lambda-batch-identifier
    spec:
      containers:
      - name: audi-skripsi-lambda-batch-identifier-container
        image: audi-skripsi-lambda-identifier:1.0.1
        ports:
        - containerPort: 8080
        env:
        - name: KAFKA_CONSUMER_GROUP
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_IDENTIFIER_BATCH_KAFKA_CONSUMER_GROUP
        - name: KAFKA_IN_TOPIC
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_IDENTIFIER_BATCH_KAFKA_IN_TOPIC
        - name: KAFKA_OUT_TOPIC
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_IDENTIFIER_BATCH_KAFKA_OUT_TOPIC
        - name: KAFKA_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: KAFKA_ADDRESS

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audi-skripsi-lambda-batch-level-standardizer-deployment
  labels:
    app: audi-skripsi-lambda-batch-level-standardizer
spec:
  replicas: 3
  selector:
    matchLabels:
      app: audi-skripsi-lambda-batch-level-standardizer
  template:
    metadata:
      labels:
        app: audi-skripsi-lambda-batch-level-standardizer
    spec:
      containers:
      - name: audi-skripsi-lambda-batch-level-standardizer-container
        image: audi-skripsi-lambda-level-standardizer:1.0.1
        ports:
        - containerPort: 8080
        env:
        - name: KAFKA_CONSUMER_GROUP
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_LEVEL_STANDARDIZER_BATCH_KAFKA_CONSUMER_GROUP
        - name: KAFKA_IN_TOPIC
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_LEVEL_STANDARDIZER_BATCH_KAFKA_IN_TOPIC
        - name: KAFKA_OUT_TOPIC
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_LEVEL_STANDARDIZER_BATCH_KAFKA_OUT_TOPIC
        - name: KAFKA_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: KAFKA_ADDRESS

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audi-skripsi-lambda-event-presenter-deployment
  labels:
    app: audi-skripsi-lambda-event-presenter
spec:
  replicas: 3
  selector:
    matchLabels:
      app: audi-skripsi-lambda-event-presenter
  template:
    metadata:
      labels:
        app: audi-skripsi-lambda-event-presenter
    spec:
      containers:
      - name: audi-skripsi-lambda-event-presenter-container
        image: audi-skripsi-lambda-event-presenter:1.2.0
        ports:
        - containerPort: 8080
        env:
        - name: KAFKA_CONSUMER_GROUP
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_EVENT_PRESENTER_KAFKA_CONSUMER_GROUP
        - name: KAFKA_IN_TOPIC
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_EVENT_PRESENTER_KAFKA_IN_TOPIC
        - name: MONGODB_DB_NAME
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: MONGODB_NAME
        - name: MONGODB_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: MONGODB_ADDRESS
        - name: REDIS_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: REDIS_ADDRESS
        - name: REDIS_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: REDIS_PASSWORD
        - name: BATCH_SIZE
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_EVENT_PRESENTER_BATCH_SIZE
        - name: BATCH_TIME_SECOND
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_EVENT_PRESENTER_BATCH_TIME_SECOND
        - name: KAFKA_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: KAFKA_ADDRESS

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audi-skripsi-lambda-batch-event-presenter-deployment
  labels:
    app: audi-skripsi-lambda-batch-event-presenter
spec:
  replicas: 3
  selector:
    matchLabels:
      app: audi-skripsi-lambda-batch-event-presenter
  template:
    metadata:
      labels:
        app: audi-skripsi-lambda-batch-event-presenter
    spec:
      containers:
      - name: audi-skripsi-lambda-batch-event-presenter-container
        image: audi-skripsi-lambda-event-presenter:1.2.0
        ports:
        - containerPort: 8080
        env:
        - name: KAFKA_CONSUMER_GROUP
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_EVENT_PRESENTER_BATCH_KAFKA_CONSUMER_GROUP
        - name: KAFKA_IN_TOPIC
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_EVENT_PRESENTER_BATCH_KAFKA_IN_TOPIC
        - name: MONGODB_DB_NAME
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: MONGODB_NAME
        - name: MONGODB_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: MONGODB_ADDRESS
        - name: REDIS_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: REDIS_ADDRESS
        - name: REDIS_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: REDIS_PASSWORD
        - name: BATCH_SIZE
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_EVENT_PRESENTER_BATCH_SIZE
        - name: BATCH_TIME_SECOND
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_EVENT_PRESENTER_BATCH_TIME_SECOND
        - name: KAFKA_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: KAFKA_ADDRESS

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audi-skripsi-lambda-event-presenter-webservice-deployment
  labels:
    app: audi-skripsi-lambda-event-presenter-webservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: audi-skripsi-lambda-event-presenter-webservice
  template:
    metadata:
      labels:
        app: audi-skripsi-lambda-event-presenter-webservice
    spec:
      containers:
      - name: audi-skripsi-lambda-event-presenter-webservice-container
        image: audi-skripsi-lambda-event-presenter:1.2.0
        command: ["./main"]
        args: ["-webservice-mode"]
        ports:
        - containerPort: 8080
        env:
        - name: KAFKA_CONSUMER_GROUP
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_EVENT_PRESENTER_KAFKA_CONSUMER_GROUP
        - name: KAFKA_IN_TOPIC
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_EVENT_PRESENTER_KAFKA_IN_TOPIC
        - name: MONGODB_DB_NAME
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: MONGODB_NAME
        - name: MONGODB_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: MONGODB_ADDRESS
        - name: REDIS_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: REDIS_ADDRESS
        - name: REDIS_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: REDIS_PASSWORD
        - name: BATCH_SIZE
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_EVENT_PRESENTER_BATCH_SIZE
        - name: BATCH_TIME_SECOND
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_EVENT_PRESENTER_BATCH_TIME_SECOND
        - name: KAFKA_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: KAFKA_ADDRESS

---
apiVersion: v1
kind: Service
metadata:
  name: audi-skripsi-lambda-event-presenter-webservice-service
  labels:
    app: audi-skripsi-lambda-event-presenter-webservice
spec:
  selector:
    app: audi-skripsi-lambda-event-presenter-webservice
  ports:
    - name: http
      port: 80
      targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audi-skripsi-lambda-batch-processor-ingest-deployment
  labels:
    app: audi-skripsi-lambda-batch-processor-ingest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: audi-skripsi-lambda-batch-processor-ingest
  template:
    metadata:
      labels:
        app: audi-skripsi-lambda-batch-processor-ingest
    spec:
      containers:
      - name: audi-skripsi-lambda-batch-processor-ingest-container
        image: audi-skripsi-lambda-batch-processor:1.0.1
        command: ["./main"]
        args: ["-log-injector"]
        ports:
        - containerPort: 8081
        env:
        - name: KAFKA_CONSUMER_GROUP
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_BATCH_PROCESSOR_KAFKA_CONSUMER_GROUP
        - name: KAFKA_IN_TOPIC
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_BATCH_PROCESSOR_KAFKA_IN_TOPIC
        - name: KAFKA_OUT_TOPIC
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: LAMBDA_BATCH_PROCESSOR_KAFKA_OUT_TOPIC
        - name: NAME_NODE_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: NAME_NODE_ADDRESS
        - name: KAFKA_ADDRESS
          valueFrom:
            configMapKeyRef:
              name: main-config-5
              key: KAFKA_ADDRESS